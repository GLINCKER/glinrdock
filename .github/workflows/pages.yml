name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'INSTALL.md'
      - 'QUICKSTART.md'
      - 'SECURITY.md'
      - '.github/workflows/pages.yml'
  
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Install dependencies
        run: |
          npm install -g @vuepress/cli@next
          # Alternative: Use other static site generators like mkdocs, gitbook, etc.
          
      - name: Create VuePress config
        run: |
          mkdir -p .vuepress
          cat > .vuepress/config.js << 'EOF'
          module.exports = {
            title: 'GlinrDock Documentation',
            description: 'Fast, Secure, Simple Container Management',
            base: '/glinrdock/',
            themeConfig: {
              nav: [
                { text: 'Home', link: '/' },
                { text: 'Install', link: '/INSTALL' },
                { text: 'Quick Start', link: '/QUICKSTART' },
                { text: 'Security', link: '/SECURITY' },
                { text: 'API', link: '/docs/API' },
                { text: 'GitHub', link: 'https://github.com/GLINCKER/glinrdock-release' }
              ],
              sidebar: [
                '/',
                '/INSTALL',
                '/QUICKSTART', 
                '/SECURITY',
                {
                  title: 'Documentation',
                  collapsable: false,
                  children: [
                    '/docs/Quickstart',
                    '/docs/UI-LITE',
                    '/docs/API',
                    '/docs/Troubleshooting',
                    '/docs/BackupRestore',
                    '/docs/Upgrades'
                  ]
                }
              ],
              repo: 'GLINCKER/glinrdock',
              editLinks: true,
              editLinkText: 'Edit this page on GitHub'
            }
          }
          EOF
          
      - name: Prepare documentation structure
        run: |
          # Create docs structure for VuePress
          mkdir -p docs/.vuepress
          mv .vuepress/config.js docs/.vuepress/
          
          # Copy root documentation files
          cp README.md docs/
          cp INSTALL.md docs/
          cp QUICKSTART.md docs/
          cp SECURITY.md docs/
          
          # Ensure docs directory exists
          mkdir -p docs/docs
          
          # Create placeholder files if docs don't exist yet
          if [ ! -f "docs/docs/API.md" ]; then
            echo "# API Documentation\n\nComing soon..." > docs/docs/API.md
          fi
          
          if [ ! -f "docs/docs/Troubleshooting.md" ]; then
            echo "# Troubleshooting\n\nComing soon..." > docs/docs/Troubleshooting.md
          fi
          
          if [ ! -f "docs/docs/BackupRestore.md" ]; then
            echo "# Backup and Restore\n\nComing soon..." > docs/docs/BackupRestore.md
          fi
          
          if [ ! -f "docs/docs/Upgrades.md" ]; then
            echo "# Upgrades\n\nComing soon..." > docs/docs/Upgrades.md
          fi
          
          if [ ! -f "docs/docs/UI-LITE.md" ]; then
            echo "# UI-LITE Guide\n\nComing soon..." > docs/docs/UI-LITE.md
          fi
          
          if [ ! -f "docs/docs/Quickstart.md" ]; then
            echo "# Quick Start Guide\n\nComing soon..." > docs/docs/Quickstart.md
          fi
          
      - name: Build documentation
        run: |
          cd docs
          vuepress build
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/.vuepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2